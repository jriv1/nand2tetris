// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl





CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
                Not16(in=x, out=notx);       //negates x

                Not16(in=y, out=noty);       //negates y 


                Not16(in=false, out=notzero);  

                Mux4Way16(a=x, b=notx, c=false, d=notzero,
                sel[0]=nx, sel[1]=zx, out=zeronotx);        

                Mux4Way16(a=y, b=noty, c=false, d=notzero,
                sel[0]=ny, sel[1]=zy, out=zeronoty);    

                And16(a=zeronotx, b=zeronoty, out=xandy);      
                Add16(a=zeronotx, b=zeronoty, out=xplusy);     
                Mux16(a=xandy, b=xplusy, sel=f, out=andplus);   
                Not16(in=andplus, out=notandplus); 



                Mux16(a=andplus, b=notandplus, sel=no, out=out,
                out[0..7]=andpluslower,
                out[8..15]=andplusupper,
                out[15]=ng); 

                Or8Way(in=andpluslower, out=zrlower);  

                Or8Way(in=andplusupper, out=zrupper);  

                Or(a=zrlower, b=zrupper, out=notzr);    
                        
                Not(in=notzr, out=zr);                          

}
   
